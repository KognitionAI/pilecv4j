<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>pilecv4j-parent</artifactId>
    <groupId>ai.kognition.pilecv4j</groupId>
    <version>0.16</version>
  </parent>
  <artifactId>lib-image</artifactId>
  <dependencies> 
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>lib-util</artifactId>
    </dependency>
    
    <dependency> <!-- Used for Transform -->
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>lib-nr</artifactId>
      <optional>true</optional>
    </dependency>
    
    <!-- Third party deps -->
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>native-image</artifactId>
      <classifier>${platform}</classifier>
    </dependency>
    <dependency> <!-- Needed for the NativeLibraryLoader -->
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency> <!-- Needed for the NativeLibraryLoader -->
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency> <!-- Needed for the NativeLibraryLoader -->
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
    </dependency>

    <!-- needed for image work but not numerical recipies -->
    <dependency>
      <groupId>ai.kognition.pilecv4j</groupId>
      <artifactId>opencv-${platform}</artifactId>
      <classifier>withlib</classifier>
    </dependency>
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-utils</artifactId>
    </dependency>

    <dependency> <!-- Only needed to run the main here. -->
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency> <!-- Used for the SwtImageDisplay -->
      <groupId>org.eclipse.swt</groupId>
      <artifactId>${swtartifact}</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- This is only necessary if you're going to use TiffUtils -->
    <dependency> 
      <groupId>mil.nga</groupId>
      <artifactId>tiff</artifactId>
      <optional>true</optional>
    </dependency>
    
    <!-- These are runtime dependencies that add the jpeg2000 codec to ImageIO -->
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-core</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.github.jai-imageio</groupId>
      <artifactId>jai-imageio-jpeg2000</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tiff</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-bmp</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pcx</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-pict</artifactId>
      <optional>true</optional>
    </dependency>
    
    
    <!-- Testing -->
    <dependency>
      <groupId>net.dempsy</groupId>
      <artifactId>dempsy-vfs.api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  
</project>
